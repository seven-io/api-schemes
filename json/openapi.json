{
  "openapi": "3.0.0",
  "info": {
    "description": "sms77.io Swagger API. Get your API-Key now at sms77.io.",
    "version": "1.0.0",
    "title": "sms77.io API",
    "termsOfService": "https://sms77.io/en/company/terms/",
    "contact": {
      "email": "support@sms77.io",
      "url": "https://sms77.io/en/company/contact",
      "name": "Support"
    },
    "license": {
      "name": "Licensed by Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "tags": [
    {
      "name": "analytics",
      "externalDocs": {
        "description": "Retrieve analytics",
        "url": "https://www.sms77.io/en/docs/gateway/http-api/analytics"
      }
    },
    {
      "name": "sms",
      "externalDocs": {
        "description": "Send one/multiple SMS",
        "url": "https://sms77.io/en/docs/gateway/http-api/sms-disptach"
      }
    },
    {
      "name": "balance",
      "externalDocs": {
        "description": "Retrieve account balance",
        "url": "https://sms77.io/en/docs/gateway/http-api/credit-balance"
      }
    },
    {
      "name": "contacts",
      "externalDocs": {
        "description": "Retrieve/edit/delete contact(s)",
        "url": "https://sms77.io/en/docs/gateway/http-api/contacts"
      }
    },
    {
      "name": "pricing",
      "externalDocs": {
        "description": "Retrieve pricing information",
        "url": "https://sms77.io/en/docs/gateway/http-api/pricing"
      }
    },
    {
      "name": "status",
      "externalDocs": {
        "description": "Retrieve the status for a sent SMS with the given ID",
        "url": "https://sms77.io/en/docs/gateway/http-api/status-reports"
      }
    },
    {
      "name": "validate_for_voice",
      "externalDocs": {
        "description": "Validate caller ID for voice Voice API",
        "url": "https://sms77.io/en/docs/gateway/http-api/caller-ids"
      }
    },
    {
      "name": "voice",
      "externalDocs": {
        "description": "Issue voice call to phone number",
        "url": "https://sms77.io/en/docs/gateway/http-api/voice"
      }
    },
    {
      "name": "lookup",
      "externalDocs": {
        "description": "Get number format, CNAM,- HLR- or MNP information for given phone number",
        "url": "https://sms77.io/en/docs/gateway/http-api"
      }
    },
    {
      "name": "hooks",
      "externalDocs": {
        "description": "Create, view and delete webhooks",
        "url": "https://www.sms77.io/en/docs/gateway/http-api/webhooks/"
      }
    }
  ],
  "paths": {
    "/analytics": {
      "get": {
        "operationId": "Analytics",
        "tags": ["analytics"],
        "parameters": [
          {
            "in": "query",
            "name": "start",
            "description": "Start date of the statistics in the format YYYY-MM-DD. By default, the date of 30 days ago is set.",
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "end",
            "description": "End date of the statistics in the format YYYY-MM-DD. By default, the current day.",
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "label",
            "description": "Shows only data of a specific label.",
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "subaccounts",
            "description": "Receive the data only for the main account, all your (sub-)accounts or only for specific subaccounts.",
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "group_by",
            "description": "Defines the grouping of the data.",
            "schema": {
              "type": "string",
              "enum": ["date", "label", "subaccount", "country"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "date": { "type": "string" },
                    "economy": { "type": "integer" },
                    "direct": { "type": "integer" },
                    "voice": { "type": "integer" },
                    "hlr": { "type": "integer" },
                    "mnp": { "type": "integer" },
                    "inbound": { "type": "integer" },
                    "usage_eur": { "type": "number", "format": "float" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/balance": {
      "get": {
        "operationId": "Balance",
        "tags": ["balance"],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "number",
                  "format": "float",
                  "example": 12.34
                }
              }
            }
          }
        }
      }
    },
    "/contacts": {
      "get": {
        "operationId": "ContactsGet",
        "parameters": [
          {
            "in": "query",
            "description": "Determines the action to execute.",
            "name": "action",
            "required": true,
            "schema": { "type": "string", "enum": ["read"] }
          },
          {
            "in": "query",
            "description": "Defines whether to return the response as JSON or CSV separated by semicolon.",
            "name": "json",
            "schema": { "type": "number", "enum": [0, 1], "default": 0 }
          }
        ],
        "responses": {
          "200": {
            "description": "OK (CSV)",
            "content": {
              "text/csv": {
                "schema": {
                  "example": "\"1\";\"Tommy Tester\";\"0049179876543210\"",
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "example": "\"1\";\"Tommy Tester\";\"0049179876543210\"",
                  "type": "string"
                }
              }
            }
          }
        },
        "tags": ["contacts"]
      },
      "post": {
        "operationId": "ContactsPOST",
        "parameters": [
          {
            "in": "query",
            "description": "Determines the action to execute.",
            "name": "action",
            "required": true,
            "schema": { "type": "string", "enum": ["del", "write"] }
          },
          {
            "in": "query",
            "description": "Defines whether to return the response as JSON or CSV separated by semicolon.",
            "name": "json",
            "schema": { "type": "number", "enum": [0, 1], "default": 0 }
          },
          {
            "in": "query",
            "description": "The contact ID for editing/deletion.",
            "name": "id",
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "description": "The contacts name.",
            "name": "nick",
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "description": "The contacts phone number.",
            "name": "empfaenger",
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "description": "The contacts email address.",
            "name": "email",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": { "schema": { "type": "string", "example": 152 } },
              "application/json": {
                "schema": { "type": "string", "example": 152 }
              }
            }
          }
        },
        "tags": ["contacts"]
      }
    },
    "/hooks": {
      "get": {
        "operationId": "HooksGet",
        "parameters": [
          {
            "in": "query",
            "description": "Determines the action to execute.",
            "name": "action",
            "required": true,
            "schema": { "type": "string", "enum": ["read"] }
          }
        ],
        "tags": ["hooks"],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "hooks": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": { "type": "string" },
                          "target_url": { "type": "string" },
                          "event_type": { "type": "string" },
                          "request_method": { "type": "string" },
                          "created": { "type": "string" }
                        }
                      }
                    },
                    "success": { "type": "boolean" }
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "HooksPOST",
        "parameters": [
          {
            "in": "query",
            "description": "Determines the action to execute.",
            "name": "action",
            "required": true,
            "schema": { "type": "string", "enum": ["subscribe", "unsubscribe"] }
          },
          {
            "in": "query",
            "description": "The Webhook ID you wish to unsubscribe.",
            "name": "id",
            "schema": { "type": "integer" }
          },
          {
            "in": "query",
            "description": "Target URL of your Webhook.",
            "name": "target_url",
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "description": "Type of event for which you would like to receive a webhook.",
            "name": "event_type",
            "schema": {
              "type": "string",
              "enum": ["all", "sms_mo", "dlr", "voice_status"]
            }
          },
          {
            "in": "query",
            "description": "Request method in which you want to receive the webhook.",
            "name": "request_method",
            "schema": {
              "type": "string",
              "enum": ["POST", "JSON", "GET"],
              "default": "POST"
            }
          }
        ],
        "tags": ["hooks"],
        "responses": {
          "200": {
            "description": "Hook subscribed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": { "type": "boolean" },
                    "id": { "type": "integer" }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lookup": {
      "post": {
        "operationId": "Lookup",
        "tags": ["lookup"],
        "parameters": [
          {
            "in": "query",
            "description": "Allowed values are \"cnam\", \"format\", \"hlr\" and \"mnp\".",
            "name": "type",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "description": "The phone number to look up.",
            "name": "number",
            "required": true,
            "style": "form",
            "explode": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "description": "Determines whether the response shall be returned in JSON format. Does not work with type \"format\".",
            "name": "json",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "enum": [100, 202, 500, 600],
                            "type": "number"
                          },
                          "success": {
                            "description": "Determines if the request was successful.,",
                            "type": "boolean"
                          },
                          "international": {
                            "description": "The number formatted accordingly to the E.164 standard.",
                            "type": "string"
                          },
                          "international_formatted": {
                            "description": "The number formatted accordingly to the E.164 standard in a human readable format.",
                            "type": "string"
                          },
                          "name": {
                            "description": "The carrier name",
                            "type": "string"
                          },
                          "number": {
                            "type": "string",
                            "description": "The number formatted accordingly to the E.164 standard in a human readable format."
                          },
                          "national": {
                            "type": "string",
                            "description": "The number in a domestic number format."
                          },
                          "country_iso": {
                            "type": "string",
                            "description": "The two digit ISO 3166-1 alpha-2 country code."
                          },
                          "country_name": {
                            "type": "string",
                            "description": "The full english name if the number belonging country."
                          },
                          "country_code": {
                            "type": "string",
                            "description": "The area code of the number belonging country. This value is numeric."
                          },
                          "carrier": {
                            "type": "string",
                            "description": "The (former) mobile carrier the number got issued to on initial number release."
                          },
                          "status": { "type": "string" },
                          "international_format_number": { "type": "string" },
                          "national_format_number": { "type": "string" },
                          "country_code_iso3": { "type": "string" },
                          "country_prefix": { "type": "string" },
                          "ported": {
                            "type": "string",
                            "enum": [
                              "unknown",
                              "ported",
                              "not_ported",
                              "assumed_not_ported",
                              "assumed_ported"
                            ]
                          },
                          "current_carrier": {
                            "schema": { "$ref": "#/components/schemas/Carrier" }
                          },
                          "original_carrier": {
                            "schema": { "$ref": "#/components/schemas/Carrier" }
                          },
                          "lookup_outcome": { "type": "string" },
                          "lookup_outcome_message": { "type": "string" },
                          "valid_number": { "type": "string" },
                          "reachable": {
                            "type": "string",
                            "enum": [
                              "unknown",
                              "reachable",
                              "undeliverable",
                              "absent",
                              "bad_number",
                              "blacklisted"
                            ]
                          },
                          "roaming": {
                            "schema": { "$ref": "#/components/schemas/Roaming" }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lookup/cnam": {
      "post": {
        "operationId": "LookupCnam",
        "tags": ["lookup"],
        "parameters": [
          {
            "in": "query",
            "description": "The phone number to look up.",
            "name": "number",
            "required": true,
            "style": "form",
            "explode": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "description": "The API status code",
                            "enum": [100],
                            "type": "number"
                          },
                          "name": {
                            "description": "The country for given phone number",
                            "type": "string"
                          },
                          "number": {
                            "description": "The phone number that was looked up",
                            "type": "string"
                          },
                          "success": {
                            "description": "Whether the request was successful or not",
                            "enum": [true, false],
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lookup/format": {
      "post": {
        "operationId": "LookupFormat",
        "tags": ["lookup"],
        "parameters": [
          {
            "in": "query",
            "description": "The phone number to look up.",
            "name": "number",
            "required": true,
            "style": "form",
            "explode": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "carrier": {
                            "description": "Network operator to whom the call number was originally assigned.",
                            "type": "string"
                          },
                          "country_code": {
                            "description": "Country code of the queried number – international without leading “00”.",
                            "type": "string"
                          },
                          "country_iso": {
                            "description": "Country code of the phone number in the format ISO 3166-1 alpha-2 (two letters).",
                            "type": "string"
                          },
                          "country_name": {
                            "description": "The full name of the country of the queried phone number in English.",
                            "type": "string"
                          },
                          "international": {
                            "description": "International E.164 format of the queried phone number.",
                            "type": "string"
                          },
                          "international_formatted": {
                            "description": "The international number.",
                            "type": "string"
                          },
                          "national": {
                            "description": "National format of the queried phone number.",
                            "type": "string"
                          },
                          "network_type": {
                            "description": "The type of network for the requested number.",
                            "type": "string"
                          },
                          "success": {
                            "description": "Whether the request was successful or not.",
                            "type": "boolean"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lookup/hlr": {
      "post": {
        "operationId": "LookupHlr",
        "tags": ["lookup"],
        "parameters": [
          {
            "in": "query",
            "description": "The phone number to look up.",
            "name": "number",
            "required": true,
            "style": "form",
            "explode": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "international_formatted": {
                            "description": "The number formatted accordingly to the E.164 standard in a human readable format.",
                            "type": "string"
                          },
                          "country_name": {
                            "type": "string",
                            "description": "The full english name if the number belonging country."
                          },
                          "country_code": {
                            "type": "string",
                            "description": "The area code of the number belonging country. This value is numeric."
                          },
                          "gsm_code": { "type": "string" },
                          "gsm_message": { "type": "string" },
                          "status_message": { "type": "string" },
                          "status": { "type": "boolean" },
                          "international_format_number": { "type": "string" },
                          "national_format_number": { "type": "string" },
                          "country_code_iso3": { "type": "string" },
                          "country_prefix": { "type": "string" },
                          "ported": {
                            "type": "string",
                            "enum": [
                              "unknown",
                              "ported",
                              "not_ported",
                              "assumed_not_ported",
                              "assumed_ported"
                            ]
                          },
                          "current_carrier": {
                            "schema": { "$ref": "#/components/schemas/Carrier" }
                          },
                          "original_carrier": {
                            "schema": { "$ref": "#/components/schemas/Carrier" }
                          },
                          "lookup_outcome": { "type": "string" },
                          "lookup_outcome_message": { "type": "string" },
                          "valid_number": { "type": "string" },
                          "reachable": {
                            "type": "string",
                            "enum": [
                              "unknown",
                              "reachable",
                              "undeliverable",
                              "absent",
                              "bad_number",
                              "blacklisted"
                            ]
                          },
                          "roaming": {
                            "schema": { "$ref": "#/components/schemas/Roaming" }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/lookup/mnp": {
      "post": {
        "operationId": "LookupMnp",
        "tags": ["lookup"],
        "parameters": [
          {
            "in": "query",
            "description": "The phone number to look up.",
            "name": "number",
            "required": true,
            "style": "form",
            "explode": false,
            "schema": { "type": "array", "items": { "type": "string" } }
          },
          {
            "in": "query",
            "description": "Determines whether the response shall be returned in JSON format.",
            "name": "json",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "code": {
                            "enum": [100, 202, 500, 600],
                            "type": "number"
                          },
                          "success": {
                            "description": "Determines if the request was successful.,",
                            "type": "boolean"
                          },
                          "price": { "type": "float" },
                          "mnp": {
                            "schema": { "$ref": "#/components/schemas/Mnp" }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/pricing": {
      "get": {
        "operationId": "Pricing",
        "tags": ["pricing"],
        "parameters": [
          {
            "in": "query",
            "name": "country",
            "description": "The countries ISO code to get pricings for. Allowed values are de, fr, at. Omit to show pricings for all channels.",
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "format",
            "description": "Determines the response format. Allowed values are json and csv. The default value is json.",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/csv": {
                "examples": {
                  "response": {
                    "value": "countryCode,countryName,countryPrefix,mcc,mncs,networkName,price,features,comment \"DE\";\"Germany\";\"49\";\"262\";\"15\";\" (Airdata)\";\"0.075\";\"\";\"\"\n"
                  }
                }
              },
              "application/json": {
                "examples": {
                  "response": {
                    "value": {
                      "schema": {
                        "type": "object",
                        "properties": {
                          "countCountries": {
                            "type": "integer",
                            "description": "The number if countries in total."
                          },
                          "countNetworks": {
                            "type": "integer",
                            "description": "The number of total networks."
                          },
                          "countries": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "countryCode": {
                                  "type": "string",
                                  "description": "The countries ISO code."
                                },
                                "countryName": {
                                  "type": "string",
                                  "description": "The countries full name."
                                },
                                "countryPrefix": {
                                  "type": "string",
                                  "description": "The countries number prefix."
                                },
                                "networks": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "comment": {
                                        "description": "Any information which might be of interest.",
                                        "type": "string"
                                      },
                                      "features": {
                                        "description": "The features supported by this network.",
                                        "type": "array",
                                        "items": { "type": "string" }
                                      },
                                      "networkName": {
                                        "type": "string",
                                        "description": "The full name of the carrier."
                                      },
                                      "mcc": {
                                        "type": "string",
                                        "description": "The mobile country code."
                                      },
                                      "mncs": {
                                        "description": "The mobile network code(s).",
                                        "type": "array",
                                        "items": { "type": "string" }
                                      },
                                      "price": {
                                        "type": "number",
                                        "format": "float"
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/sms": {
      "post": {
        "operationId": "Sms",
        "tags": ["sms"],
        "parameters": [
          {
            "in": "query",
            "name": "text",
            "description": "The actual text message to send.",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "to",
            "description": "The recipient number or group name.",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "from",
            "description": "Set a custom sender name.",
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "foreign_id",
            "description": "Identifier to return in callbacks.",
            "schema": {
              "type": "string",
              "pattern": "^[A-Z|a-z|0-9|.|\\-|_|@]+"
            }
          },
          {
            "in": "query",
            "name": "label",
            "description": "A custom label.",
            "schema": {
              "type": "string",
              "pattern": "^[A-Z|a-z|0-9|.|\\-|_|@]+"
            }
          },
          {
            "in": "query",
            "name": "udh",
            "description": "A custom User Data Header.",
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "delay",
            "description": "Date/Time for delayed dispatch.",
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "name": "debug",
            "description": "Disable message sending.",
            "schema": { "type": "number", "enum": [1, 0], "default": 0 }
          },
          {
            "in": "query",
            "name": "no_reload",
            "description": "Enable sending of duplicated messages within 180 seconds.",
            "schema": { "type": "number", "enum": [1, 0], "default": 0 }
          },
          {
            "in": "query",
            "name": "unicode",
            "description": "Force unicode encoding. Reduces sms length to 70 chars.",
            "schema": { "type": "number", "enum": [1, 0], "default": 0 }
          },
          {
            "in": "query",
            "name": "flash",
            "description": "Send as flash.",
            "schema": { "type": "number", "enum": [1, 0], "default": 0 }
          },
          {
            "in": "query",
            "name": "utf8",
            "description": "Force UTF8 encoding.",
            "schema": { "type": "number", "enum": [1, 0], "default": 0 }
          },
          {
            "in": "query",
            "name": "details",
            "description": "Attach message details to response.",
            "schema": { "type": "number", "enum": [1, 0], "default": 0 }
          },
          {
            "in": "query",
            "name": "return_msg_id",
            "description": "Attach message ID to second row in a text response.",
            "schema": { "type": "number", "enum": [1, 0], "default": 0 }
          },
          {
            "in": "query",
            "name": "json",
            "description": "Return a detailed JSON response.",
            "schema": { "type": "number", "enum": [1, 0], "default": 0 }
          },
          {
            "in": "query",
            "name": "performance_tracking",
            "description": "Enable performance tracking for found URLs.",
            "schema": { "type": "number", "enum": [1, 0], "default": 0 }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "properties": {
                    "debug": { "type": "string" },
                    "balance": { "type": "number", "format": "float" },
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "encoding": { "type": "string" },
                          "error": { "type": "string" },
                          "error_text": { "type": "string" },
                          "id": { "type": "string" },
                          "messages": {
                            "type": "array",
                            "items": { "type": "string" }
                          },
                          "parts": { "type": "integer" },
                          "price": { "type": "integer" },
                          "recipient": { "type": "string" },
                          "sender": { "type": "string" },
                          "success": { "type": "boolean" },
                          "text": { "type": "string" }
                        }
                      }
                    },
                    "sms_type": {
                      "type": "string",
                      "enum": ["economy", "direct"]
                    },
                    "success": { "type": "string" },
                    "total_price": { "type": "number", "format": "float" }
                  },
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "properties": {
                    "debug": { "type": "string" },
                    "balance": { "type": "number", "format": "float" },
                    "messages": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "encoding": { "type": "string" },
                          "error": { "type": "string" },
                          "error_text": { "type": "string" },
                          "id": { "type": "string" },
                          "messages": {
                            "type": "array",
                            "items": { "type": "string" }
                          },
                          "parts": { "type": "integer" },
                          "price": { "type": "integer" },
                          "recipient": { "type": "string" },
                          "sender": { "type": "string" },
                          "success": { "type": "boolean" },
                          "text": { "type": "string" }
                        }
                      }
                    },
                    "sms_type": {
                      "type": "string",
                      "enum": ["economy", "direct"]
                    },
                    "success": { "type": "string" },
                    "total_price": { "type": "number", "format": "float" }
                  },
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/status": {
      "get": {
        "operationId": "Status",
        "tags": ["status"],
        "parameters": [
          {
            "in": "query",
            "name": "msg_id",
            "description": "The ID from the SMS.",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "DELIVERED\n2020-01-09 15:41:30.656\n"
                }
              }
            }
          }
        }
      }
    },
    "/validate_for_voice": {
      "post": {
        "operationId": "ValidateForVoice",
        "parameters": [
          {
            "in": "query",
            "description": "Determines the recipient. Can only be a number, not a contact from your address book.",
            "name": "number",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "description": "The callback URL which gets queried right after validation.",
            "name": "callback",
            "schema": { "type": "string", "format": "uri" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "code": { "type": "string" },
                    "error": { "type": "string" },
                    "success": { "type": "boolean" }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "tags": ["validate_for_voice"]
      }
    },
    "/voice": {
      "post": {
        "operationId": "Voice",
        "tags": ["voice"],
        "parameters": [
          {
            "in": "query",
            "description": "Determines the receiver. Must be a valid phone number or contact from the address book.",
            "name": "to",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "in": "query",
            "description": "The text to convert to a voice message. Accepts valid XML too.",
            "name": "text",
            "required": true,
            "schema": { "type": "string", "maxLength": 10000 }
          },
          {
            "in": "query",
            "description": "Decides whether the parameter \"text\" is plain text or XML. The default value is 0.",
            "name": "xml",
            "schema": { "type": "number", "enum": [1, 0] }
          },
          {
            "in": "query",
            "description": "Sets the sender. Must be a verified sender. Use an inbound number of yours or one of ours.",
            "name": "from",
            "schema": { "type": "string" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": { "type": "string", "example": "100\n123456789\n0\n" }
              }
            }
          }
        }
      }
    }
  },
  "security": [{ "ApiKeyAuth": [] }],
  "externalDocs": {
    "description": "Find out more about the Sms77.io SMS gateway.",
    "url": "https://sms77.io/en/docs/gateway/http-api"
  },
  "servers": [{ "url": "https://gateway.sms77.io/api" }],
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": { "in": "header", "name": "X-API-Key", "type": "apiKey" }
    },
    "schemas": {
      "Carrier": {
        "type": "object",
        "properties": {
          "network_code": { "type": "string" },
          "name": { "type": "string" },
          "country": { "type": "string" },
          "network_type": {
            "type": "string",
            "enum": [
              "fixed_line",
              "fixed_line_or_mobile",
              "mobile",
              "pager",
              "personal_number",
              "premium_rate",
              "shared_cost",
              "toll_free",
              "uan",
              "unknown",
              "voicemail",
              "voip"
            ]
          }
        }
      },
      "Mnp": {
        "type": "object",
        "properties": {
          "country": { "type": "string" },
          "isPorted": { "type": "boolean" },
          "international_formatted": { "type": "string" },
          "mccmnc": { "type": "string" },
          "national_format": { "type": "string" },
          "network": { "type": "string" },
          "number": { "type": "string" }
        }
      },
      "Roaming": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["unknown", "roaming", "not_roaming"]
          },
          "roaming_country_code": { "type": "string" },
          "roaming_network_code": { "type": "string" },
          "roaming_network_name": { "type": "string" }
        }
      }
    }
  }
}
